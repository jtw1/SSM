<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--写接口的全类名，相当于告诉MyBatis这个配置文件是实现哪个接口的-->
<mapper namespace="org.exer.Dao.EmployeeDao">
    <!--select：用来定义一个查询操作
        id：方法名 相当于这个配置文件是对某个方法的实现
        resultType：指定方法运行后的返回值类型
        #{属性名}：代表取出传递过来的某个参数值-->
    <select id="getEmpById" resultType="org.exer.Bean.Employee">
    <!--sql语句不要写分号-->
    select * from t_employee where id = #{id}
    </select>

    <!--更新操作  增删改 不用写返回值类型 他的返回值是影响有多少行
        mybatis自动判断，如果是数字（int,long）
                        如果是布尔，影响0行封装为false，否则true-->
    <update id="updateEmployee">
        UPDATE t_employee SET empName=#{empName},gender=#{gender},email=#{email} WHERE id=#{id}
    </update>

    <!--删除操作-->
    <delete id="deleteEmployee">
        DELETE FROM t_employee WHERE id=#{id}
    </delete>

    <!--插入操作  useGeneratedKeys="true",让mybatis自动的将自增id赋值给传入的employee对象的id属性
                   keyProperty="id" 将刚才自增的id赋值给哪个属性-->
    <insert id="insertEmployee" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_employee(empName,gender,email) VALUES (#{empName},#{gender},#{email})
    </insert>
</mapper>